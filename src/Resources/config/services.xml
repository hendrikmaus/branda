<?xml version="1.0" encoding="UTF-8" ?>
<container xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns="http://symfony.com/schema/dic/services"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <services>

        <service class="Symfony\Component\Console\Logger\ConsoleLogger" id="hmaus.branda.logger"/>
        <service class="Symfony\Component\Console\Style\SymfonyStyle" id="hmaus.branda.io"/>

        <service class="Hmaus\DrafterPhp\Drafter" id="hmaus.branda.drafterphp">
            <argument type="string">vendor/bin/drafter</argument>
        </service>

        <service class="Symfony\Component\Filesystem\Filesystem" id="hmaus.branda.filesystem"/>
        <service class="Symfony\Component\EventDispatcher\EventDispatcher" id="hmaus.branda.event_dispatcher"/>

        <service class="Hmaus\Branda\Matching\MatchingService" id="hmaus.branda.matching.matching_service"/>

        <service class="Hmaus\Spas\Parser\Apib" id="hmaus.spas.parser.apib.apib_parsed_requests_provider"/>

        <service class="Hmaus\Branda\ApiDescription\ApiBlueprint" id="hmaus.branda.api_description.apib">
            <argument type="service" id="hmaus.branda.drafterphp"/>
            <argument type="service" id="hmaus.spas.parser.apib.apib_parsed_requests_provider"/>
        </service>

        <service class="Hmaus\Branda\Server\MockServer" id="hmaus.branda.server.mock_server">
            <argument type="service" id="hmaus.branda.io"/>
            <argument type="service" id="hmaus.branda.matching.matching_service"/>
            <argument type="service" id="hmaus.branda.server.react_provider"/>
        </service>

        <service class="Hmaus\Branda\Server\ReactProvider" id="hmaus.branda.server.react_provider"/>
    </services>
</container>
